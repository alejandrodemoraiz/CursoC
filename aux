#include <stdio.h>
#include <stdlib.h>
#include <string.h>



#define TAM 5
typedef struct
{
    int dia;
    int mes;
    int anio;





} eFecha;



typedef struct
{

    int legajo;
    char nombre [50];
    int edad;
    char sexo;


    eFecha fechaIngreso;


    int ocupado;
    char sector [25];




} eEmpleados;


void altaEmpleados (eEmpleados vec[], int tam);
void mostrarEmpleado(eEmpleados empleado);
int buscarEmpleado(eEmpleados vec[], int tam, int legajo);
int buscarVacio(eEmpleados vec[], int tam);
void inicializarEmpleados(eEmpleados vec[], int tam);
void bajaEmpleado( eEmpleados vec[], int tam);
int elegirSector();
int menu();

int main()
{

    eEmpleados lista[TAM];

    inicializarEmpleados(lista,TAM);

   // HarcodeoDe(lista,TAM);
    char seguir = 'n';

    do
    {

        switch(menu())
        {



        case 1:
            altaEmpleados(lista,TAM);
            break;
        case 2:
            mostrarEmpleados(lista,TAM);
            break;
        case 3:
            bajaEmpleado(lista,TAM);
            break;
        case 4:
            break;
        case 5:
            break;
        case 6:

            break;
        case 7:
            printf("Esta seguro que desea salir? s/n");
            __fpurge(stdin);
            scanf("%c",&seguir);

            if(seguir == 's' || seguir == 'S')
            {

                printf(" usted a salido con exito.");

            }
            else
            {
                printf(" Usted eligio seguir en el menu\n");
            }

            break;

        }




    }
    while(seguir !='s');



    return 0;
}

int menu()
{
    int opc;

    printf("**********Empleados de la empresa**********\n");

    printf("1- Alta empleado\n");
    printf("2- Mostrar empleados segun:\n");
    printf("3- Baja empleado\n");
    printf("5-Modificar empleado\n");
    printf("6- Buscar empleados\n");
    printf("7-Salir \n");

    printf("Ingrese opcion:");
    scanf("%d",&opc);

    return opc;



}
void inicializarEmpleados(eEmpleados vec[], int tam)
{

    for(int i=0; i < tam; i++)
    {
        vec[i].ocupado = 0;
        //printf(vec[i].estado);

    }

}

int buscarVacio(eEmpleados vec[], int tam)

{
    int indice = -1;


    for( int i = 0; i<tam; i++)
    {
        if(vec[i].ocupado == 0)
        {

            indice = i;
            break;

        }


    }
    return indice;

}
int buscarEmpleado(eEmpleados vec[], int tam, int legajo)

{
    int indice = -1;

    for( int i=0; i<tam; i++)
    {

        if( vec[i].legajo == legajo && vec[i].ocupado == 1)
        {

            indice = i;
            break;

        }


    }

    return indice;


}
void mostrarEmpleado(eEmpleados empleado)

{

    printf("%d %s %c %d  %d/%d/%d %s\n",empleado.legajo,empleado.nombre,empleado.sexo,empleado.edad,empleado.fechaIngreso.dia,empleado.fechaIngreso.mes,empleado.fechaIngreso.anio,empleado.sector);


}
void mostrarEmpleados(eEmpleados vec[], int tam)

{
    int cont =0;
    for( int i=0; i<tam; i++)
    {

        if(vec[i].ocupado == 1 )
        {
            mostrarEmpleado(vec[i]);
            cont++;

        }

    }
    if(cont ==0)
    {
        printf( "No hay empleados para mostrar");

    }

}
void altaEmpleados (eEmpleados vec[], int tam)

{

    int legajo;
    int esta;
    int indice;
    char opc[25];


    indice = buscarVacio(vec,tam);

    if( indice == -1)
    {
        printf( " no hay lugar\n");

    }
    else
    {

        printf("Ingrese legajo");
        scanf("%d",&legajo);

        esta = buscarEmpleado(vec,tam,legajo);

        if(esta == -1)
        {

            vec[indice].legajo = legajo;



            printf("Ingrese nombre: ");
            __fpurge(stdin);
            scanf("%s",vec[indice].nombre);

            printf("Ingrese sexo: ");
            __fpurge(stdin);
            scanf("%c", &vec[indice].sexo);

            printf("Ingrese edad: ");
            scanf("%d", &vec[indice].edad);


            printf("Ingrese fecha de ingreso: dd/mm/aaaa: ");
            scanf("%d %d %d",&vec[indice].fechaIngreso.dia,&vec[indice].fechaIngreso.mes,&vec[indice].fechaIngreso.anio);


            printf("Elija sector para el empleado\n");
            printf("Informatica\n");
            printf("Publicidad\n");
            printf("Contabilidad\n");
            printf("Administracion\n");
            printf("RRHH \n");
            printf("ingrese opcion correspondiente: ");

            scanf("%s",opc);

            strcpy(vec[indice].sector,opc);













            vec[indice].ocupado = 1;

            printf("Empleado ingresado con exito\n\n\n");




        }
        else
        {


            printf(" Ya existe un empleado con el legajo %d", legajo);

            mostrarEmpleado(vec[esta]);
        }

    }

}
void HarcodeoDe( eEmpleados vec[], int tam)
{
    eEmpleados empleados[10] =
    {
        { 4444, "juan",'m', 1,{2, 9, 1995},"RRHH"},
        { 4454, "Alejandro",'m', 1,{10, 9, 1998},"Informatica"},
        { 9994, "Rodrigo",'m', 1,{8, 9, 1995},"Publicidad"},
        { 4574, "francisca",'f', 1,{2, 11, 2000},"Informatica"},
        { 1001, "Giselle",'f', 1,{3, 5, 1996},"Administracion"},

    };
    for( int i = 0; i<tam; i++)
    {
        vec[i] = empleados[i];
        vec[i].ocupado =1;


    }
}
void bajaEmpleado( eEmpleados vec[], int tam)
{

    int legajo;
    int esta;
    char confirmacion = 'n';
    printf("Ingrese legajo a borrar");
    scanf(" %d",&legajo);

    esta = buscarEmpleado(vec,tam,legajo);

    if(esta == -1)
    {
        printf("Legajo inexistente");




    }
    else
    {
        mostrarEmpleado(vec[esta]);
        printf(" Esta seguro que desea borrar este empleado? s/n");
        __fpurge(stdin);
        scanf("%c",&confirmacion);
        if(confirmacion == 's'|| confirmacion == 'S')
        {

            vec[esta].ocupado =0;
            printf("legajo borrado con exito");


        }
        else
        {

            printf("Operacion cancelada");
        }



    }





}
